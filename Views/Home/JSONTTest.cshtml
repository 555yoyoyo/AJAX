@{
    ViewData["Title"] = "JSONTTest";
}

<h1>Json 練習</h1>
<table id="table1" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>姓名</th>
            <th>年資</th>
            <th>薪水</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section Styles{
    <style></style>
}

@section Scripts{
    <script>
        //JSON格式 [ 陣列 ] { 物件 }
        const emp = {
            "employees": [
                { "id": 1, "name": "Tom", "workYears": 3, "salary": 35000 },//emp.employees[0]
                { "id": 2, "name": "Jack", "workYears": 5, "salary": 40000 },//emp.employees[1]
                { "id": 3, "name": "Mary", "workYears": 7, "salary": 45000 }//emp.employees[2]
            ]
        };
        //// 物件.屬性
        //console.log(emp.employees[0].name); // Tom

        //// 物件["屬性"]
        //console.log(emp.employees[2].workYears); // 7

        //const aaSalary = "salary";
        //console.log(emp.employees[1][aaSalary]); // 40000

        //emp.employees.forEach(emp => {
        //    console.log(emp.name)
        //})//Tom //Jack //Mary


        //const myUl = document.querySelector('#ul1');
        //const emps = emp.employees.map(emp => emp.name + "-" + emp.salary)
        //myUl.innerHTML = emps.join("")

        //const emps = emp.employees.map(emp => `<li>${emp.name}</li>`)
        //myUl.innerHTML = emps.join("");

        //emp.employees.forEach(emp => {
        //    console.log(emp.name)

            //DOM
            //<li>name</li>
            //建立 li 標籤
            //const eleLi = document.createElement("li");  //<li></li>
            //建立name => 文字節點
            //const txtLi = document.createTextNode(emp.name); //Jack
            //把文字節點加到元素節點中
            //eleLi.appendChild(txtLi); //<li>Jack</li>
            //myUl.appendChild(eleLi);//<ul><li>Jack</li>
        //})

        const tb = document.querySelector('#table1>tbody');

            //解構賦值
            const emps = emp.employees.map(employee => {

                const { name, workYears, salary } = employee;  //{ "name": "Tom", "workYears": 3, "salary": 35000 }
                return (
                    ` <tr>
                                          <td>${name}</td>
                                          <td>${workYears}</td>
                                          <td>${salary}</td>
                                          </tr>
                                `
                )
            })
            tb.innerHTML = emps.join("");




    </script>
}

